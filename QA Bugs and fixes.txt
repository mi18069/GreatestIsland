Process of developing

Phase 1: Implementing map loading and visualization

1. The biggest problem here was a good visual representation of one cell. I decided to make one standard Tile and add different colors to it in order to represent different heights. In order to do this I made a helper class that uses different gradients depending on height of cell. Since we're using different color palette for various terrains, firstly we choose which gradient should be used, and then function Transform is used for more precise information about color of cell.

2. Another problem that occurred while showing the board is that x and y axis are not following intuition to start at the top-left corner and advance on right-bottom. I considered solution where I'll have method inside my Map that will for passed coordinates x and y return mirror cell that we want to show, but I concluded that this solution will place methods for view in Map class which is only a structure for holding Cell[,] object with some additional informations. Other idea that I implemented was placing and rotating the main camera in order to follow x and y axis intuitional direction. When setting new game, I have method CenterCameraToMap(Map map) that centers camera on the grid ( useful when we have various dimensions of maps) and then rotate it on z-axis by 90 degrees.

Phase 2: Implementing island mechanics and ui

1. The biggest problem here is separation of concerns in code and ui. I decided that cells shouldn't keep an information if they are clicked, hovered on etc. That information should be kept in Island class. The hardest part here was not the execution ( I haven't found any bug worth mentioning ) but the idea how to solve the problem.

Phase 3: Implementing get request for gathering valid data

Sensitive places:

Extras:
1. Mark for selected, missed and guessed islands
2. Camera shake on missed guess
3. 